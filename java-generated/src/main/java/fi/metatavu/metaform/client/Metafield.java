/*
 * Metaform REST API
 * REST API for Metaform
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package fi.metatavu.metaform.client;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import fi.metatavu.metaform.client.MetaformFieldType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Metafield
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-28T13:06:49.711+03:00")
public class Metafield {
  @JsonProperty("title")
  private String title = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("type")
  private MetaformFieldType type = null;

  @JsonProperty("time")
  private Boolean time = null;

  @JsonProperty("contexts")
  private List<String> contexts = null;

  public Metafield title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Metafield name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Field name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Field name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Metafield type(MetaformFieldType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")
  public MetaformFieldType getType() {
    return type;
  }

  public void setType(MetaformFieldType type) {
    this.type = type;
  }

  public Metafield time(Boolean time) {
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @ApiModelProperty(value = "")
  public Boolean isTime() {
    return time;
  }

  public void setTime(Boolean time) {
    this.time = time;
  }

  public Metafield contexts(List<String> contexts) {
    this.contexts = contexts;
    return this;
  }

  public Metafield addContextsItem(String contextsItem) {
    if (this.contexts == null) {
      this.contexts = new ArrayList<String>();
    }
    this.contexts.add(contextsItem);
    return this;
  }

   /**
   * Get contexts
   * @return contexts
  **/
  @ApiModelProperty(value = "")
  public List<String> getContexts() {
    return contexts;
  }

  public void setContexts(List<String> contexts) {
    this.contexts = contexts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Metafield metafield = (Metafield) o;
    return Objects.equals(this.title, metafield.title) &&
        Objects.equals(this.name, metafield.name) &&
        Objects.equals(this.type, metafield.type) &&
        Objects.equals(this.time, metafield.time) &&
        Objects.equals(this.contexts, metafield.contexts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, name, type, time, contexts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Metafield {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    contexts: ").append(toIndentedString(contexts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

