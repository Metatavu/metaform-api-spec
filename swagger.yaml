swagger: '2.0'
info:
  title: Metaform REST API
  description: REST API for Metaform
  version: 0.0.1
schemes:
  - https
basePath: /
consumes:
  - application/json;charset=utf-8
produces:
  - application/json;charset=utf-8
securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - bearer: []
paths:
  '/realms/{realmId}/metaforms':
    get:
      operationId: listMetaforms
      summary: Lists Metaforms 
      description: Lists Metaforms from the realm. User receives only metaforms where he/she has permission to. 
      tags:
        - Metaforms
      parameters:
        - name: realmId
          required: true
          in: path
          description: realm id
          type: string
      responses:
        '200':
          description: A list of metaforms
          schema:
            type: "array"
            items: 
              $ref: '#/definitions/Metaform'
        '400':
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        '403':
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    post:
      operationId: createMetaform
      summary: create new Metaform 
      description: Creates new Metaform
      tags:
        - Metaforms
      parameters:
        - name: realmId
          required: true
          in: path
          description: realm id
          type: string
        - name: payload
          in: body
          description: Payload
          required: true
          schema:
            $ref: '#/definitions/Metaform'
      responses:
        '200':
          description: Created Metaform
          schema:
            $ref: '#/definitions/Metaform'
        '400':
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        '403':
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        '404':
          description: Attempted to make a call to an non existant metaform
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'

  '/realms/{realmId}/metaforms/{metaformId}':
    get:
      operationId: findMetaform
      summary: Finds single Metaform 
      description: Finds a single Metaform
      tags:
        - Metaforms
      parameters:
        - name: realmId
          required: true
          in: path
          description: realm id
          type: string
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          type: string
          format: uuid
      responses:
        '200':
          description: A metaform
          schema:
            $ref: '#/definitions/Metaform'
        '400':
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        '403':
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        '404':
          description: Attempted to make a call to an non existant metaform
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    put:
      operationId: updateMetaform
      summary: Updates Metaform 
      description: Updates a Metaform
      tags:
        - Metaforms
      parameters:
        - name: realmId
          required: true
          in: path
          description: realm id
          type: string
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          type: string
          format: uuid
        - name: payload
          in: body
          description: Payload
          required: true
          schema:
            $ref: '#/definitions/Metaform'
      responses:
        '200':
          description: Updated Metaform
          schema:
            $ref: '#/definitions/Metaform'
        '400':
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        '403':
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        '404':
          description: Attempted to make a call to an non existant metaform
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    delete:
      operationId: deleteMetaform
      summary: Deletes Metaform 
      description: Deletes a Metaform
      tags:
        - Metaforms
      parameters:
        - name: realmId
          required: true
          in: path
          description: realm id
          type: string
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          type: string
          format: uuid
      responses:
        '204':
          description: Empty content indicating a successful removal
        '400':
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        '403':
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        '404':
          description: Attempted to make a call to an non existant metaform
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'

  '/realms/{realmId}/metaforms/{metaformId}/replies':
    get:
      operationId: listReplies
      summary: Lists form replies 
      description: Lists form replies
      tags:
        - Replies
      parameters:
        - name: realmId
          required: true
          in: path
          description: realm id
          type: string
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          type: string
          format: uuid
        - name: userId
          in: query
          description: Filter results by user id. If this parameter is not specified all replies are returned, this requires logged user to have proper permission to do so
          type: string
          format: uuid
        - name: createdBefore
          description: Filter results created before specified time
          in: query
          type: string
        - name: createdAfter
          description: Filter results created after specified time
          in: query
          type: string
        - name: modifiedBefore
          description: Filter results modified before specified time
          in: query
          type: string
        - name: modifiedAfter
          description: Filter results modified after specified time
          in: query
          type: string
        - name: includeRevisions
          in: query
          description: Specifies that revisions should be included into response
          type: boolean
        - name: fields
          in: query
          type: array
          collectionFormat: csv
          description: Filter results by field values. Format is field:value, multiple values can be added by using comma separator. E.g. field1=value,field2=another
          items:
            type: string
      responses:
        '200':
          description: A list of replies
          schema:
            type: "array"
            items: 
              $ref: '#/definitions/Reply'
        '400':
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        '403':
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        '404':
          description: Attempted to make a call to an non existant metaform
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    post:
      operationId: createReply
      summary: create new form reply 
      description: Creates new form reply
      tags:
        - Replies
      parameters:
        - name: realmId
          required: true
          in: path
          description: realm id
          type: string
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          type: string
          format: uuid
        - name: updateExisting
          in: query
          description: specifies that existing reply should be updated. DEPRECATED, use replymode instead
          type: boolean
        - name: replyMode
          in: query
          description: specifies reply mode that will be used. possible values UPDATE, REVISION, CUMULATIVE
          type: string
        - name: payload
          in: body
          description: Payload
          required: true
          schema:
            $ref: '#/definitions/Reply'
      responses:
        '200':
          description: Created reply
          schema:
            $ref: '#/definitions/Reply'
        '400':
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        '403':
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        '404':
          description: Attempted to make a call to an non existant metaform
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
            
  '/realms/{realmId}/metaforms/{metaformId}/export':
    get:
      operationId: export
      summary: Exports metaform data 
      description: Exports metaform data
      tags:
        - Replies
      parameters:
        - name: realmId
          required: true
          in: path
          description: realm id
          type: string
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          type: string
          format: uuid
        - name: format
          in: query
          description: Export results in specified format (XLSX)
          type: string
          required: true
      responses:
        '200':
          description: Exported Metaform
          schema:
            type: string
            format: binary
        '400':
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        '403':
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        '404':
          description: Attempted to make a call to an non existant metaform
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/realms/{realmId}/metaforms/{metaformId}/replies/{replyId}':
    get:
      operationId: findReply
      summary: Find a single reply
      description: Finds single reply by id
      tags:
        - Replies
      parameters:
        - name: realmId
          required: true
          in: path
          description: realm id
          type: string
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          type: string
          format: uuid
        - name: replyId
          required: true
          in: path
          description: Reply id
          type: string
          format: uuid
      responses:
        '200':
          description: A reply
          schema:
            $ref: '#/definitions/Reply'
        '400':
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        '403':
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        '404':
          description: Attempted to make a call to an non existant metaform
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    put:
      operationId: updateReply
      summary: Updates reply
      description: Updates reply
      tags:
        - Replies
      parameters:
        - name: realmId
          required: true
          in: path
          description: realm id
          type: string
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          type: string
          format: uuid
        - name: replyId
          required: true
          in: path
          description: Reply id
          type: string
          format: uuid
        - name: payload
          in: body
          description: Payload
          required: true
          schema:
            $ref: '#/definitions/Reply'
      responses:
        '204':
          description: Empty response indicating a succesful update
        '400':
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        '403':
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        '404':
          description: Attempted to make a call to an non existant metaform
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    delete:
      operationId: deleteReply
      summary: Deletes a reply 
      description: Deletes a reply
      tags:
        - Replies
      parameters:
        - name: realmId
          required: true
          in: path
          description: realm id
          type: string
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          type: string
          format: uuid
        - name: replyId
          required: true
          in: path
          description: Reply id
          type: string
          format: uuid
      responses:
        '204':
          description: Empty content indicating a successful removal
        '400':
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        '403':
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        '404':
          description: Attempted to make a call to an non existant metaform
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'

  '/realms/{realmId}/metaforms/{metaformId}/emailNotifications':
    get:
      operationId: listEmailNotifications
      summary: Lists form email notifications 
      description: Lists email notifications
      tags:
        - EmailNotifications
      parameters:
        - name: realmId
          required: true
          in: path
          description: realm id
          type: string
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          type: string
          format: uuid
      responses:
        '200':
          description: A list of email notifications
          schema:
            type: "array"
            items: 
              $ref: '#/definitions/EmailNotification'
        '400':
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        '403':
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        '404':
          description: Attempted to make a call to an non existant metaform
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    post:
      operationId: createEmailNotification
      summary: create new form email notification 
      description: Creates new form email notification
      tags:
        - EmailNotifications
      parameters:
        - name: realmId
          required: true
          in: path
          description: realm id
          type: string
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          type: string
          format: uuid
        - name: payload
          in: body
          description: Payload
          required: true
          schema:
            $ref: '#/definitions/EmailNotification'
      responses:
        '200':
          description: Created email notification
          schema:
            $ref: '#/definitions/EmailNotification'
        '400':
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        '403':
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        '404':
          description: Attempted to make a call to an non existant metaform
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
            
  '/realms/{realmId}/metaforms/{metaformId}/emailNotifications/{emailNotificationId}':
    get:
      operationId: findEmailNotification
      summary: Find a single emai notification
      description: Finds single email notification by id
      tags:
        - EmailNotifications
      parameters:
        - name: realmId
          required: true
          in: path
          description: realm id
          type: string
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          type: string
          format: uuid
        - name: emailNotificationId
          required: true
          in: path
          description: EmailNotification id
          type: string
          format: uuid
      responses:
        '200':
          description: an email notification
          schema:
            $ref: '#/definitions/EmailNotification'
        '400':
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        '403':
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        '404':
          description: Attempted to make a call to an non existant metaform
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    put:
      operationId: updateEmailNotification
      summary: Updates email notification
      description: Updates email notification
      tags:
        - EmailNotifications
      parameters:
        - name: realmId
          required: true
          in: path
          description: realm id
          type: string
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          type: string
          format: uuid
        - name: emailNotificationId
          required: true
          in: path
          description: EmailNotification id
          type: string
          format: uuid
        - name: payload
          in: body
          description: Payload
          required: true
          schema:
            $ref: '#/definitions/EmailNotification'
      responses:
        '200':
          description: an email notification
          schema:
            $ref: '#/definitions/EmailNotification'
        '400':
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        '403':
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        '404':
          description: Attempted to make a call to an non existant metaform
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    delete:
      operationId: deleteEmailNotification
      summary: Deletes an email notification 
      description: Deletes an email notification
      tags:
        - EmailNotifications
      parameters:
        - name: realmId
          required: true
          in: path
          description: realm id
          type: string
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          type: string
          format: uuid
        - name: emailNotificationId
          required: true
          in: path
          description: Email notification id
          type: string
          format: uuid
      responses:
        '204':
          description: Empty response indicating a succesfull removal
        '400':
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        '403':
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        '404':
          description: Attempted to make a call to an non existant metaform
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
            
definitions:
  Reply:
    type: object
    properties:
      id:
        type: "string"
        format: "uuid"
      userId:
        type: "string"
        format: "uuid"
      revision:
        type: "string"
        format: "date-time"
      data:
        $ref: '#/definitions/ReplyData'
          
  ReplyData:
    type: object
    additionalProperties:
      type: object

  Metaform:
    type: object
    properties:
      id:
        type: "string"
        format: "uuid"
      replyStrategy:
        type: "string"
        enum:
          - PUBLIC
          - PRIVATE
      allowAnonymous:
        type: "boolean"
        description: Are anonymous replies allowed or not
      title: 
        type: "string"
      sections: 
        type: "array"
        items: 
          $ref: '#/definitions/MetaformSection'
          
  MetaformSection:
    type: "object"
    properties: 
      title: 
        type: "string"
      visible-if:
        $ref: '#/definitions/MetaformVisibleIf'
      fields: 
        type: "array"
        items: 
          $ref: '#/definitions/MetaformField'
          
  MetaformField:
    type: "object"
    required:
      - type
    properties: 
      visible-if:
        $ref: '#/definitions/MetaformVisibleIf'
      name: 
        type: "string"
        description: Field name
      type:
        $ref: '#/definitions/MetaformFieldType'
      title: 
        type: "string"
      required: 
        type: "boolean"
      contexts:
        type: "array"
        items:
          type: "string"
      flags: 
        $ref: '#/definitions/MetaformFieldFlags'
      placeholder: 
        type: "string"
      class:
        type: "string"
      readonly:
        type: "boolean"
      help:
        type: "string"
      default:
        description: a default value for a field
        type: "string"
      min:
        type: "integer"
        format: int32
        description: Minimum value for a field. Only for number fields
      max:
        type: "integer"
        format: int32
        description: Maximum value for a field. Only for number fields
      step:
        type: "integer"
        format: int32
        description: Value step for a field. Only for number fields
      checked:
        type: "boolean"
        description: Whether checkbox should be checked by default. Only for checkbox fields
      printable:
        type: "boolean"
        description: Defines whether field is printable or not. Only for table fields        
      options:
        type: "array"
        description: Options for radio, checklist, select fields
        items: 
          $ref: '#/definitions/MetaformFieldOption'
      source-url:
        type: "string"
        description: Source url for autocomplete and autocomplete-multiple fields
        format: "url"
      upload-url:
        type: "string"
        description: Upload url for files field.
        format: "url"
      single-file:
        type: "boolean"
        description: Defines whether file fields allow multiple files or just one
      only-images:
        type: "boolean"
        description: Defines whether file fields allow only images
      max-file-size:
        type: "integer"
        format: int64
        description: Maximum upload size for image filds
      draggable:
        type: "boolean"
        description: Defines whether table rows should be draggable.
      columns:
        type: "array"
        description: Columns for table fields
        items:
          $ref: '#/definitions/MetaformTableColumn'
      src: 
        type: "string"
        description: Url for logo field.
        format: "url"
      text:
        type: "string"
        description: Text for small field.
      html:
        type: "string"
        description: Html code for html field.
        
  MetaformFieldFlags:
    type: "object"
    properties:
      managementEditable:
        type: "boolean"
        description: Field should be editable in management service
        default: false
    
  MetaformFieldType:
    type: "string"
    enum:
      - text
      - hidden
      - email
      - number
      - memo
      - boolean
      - radio
      - checklist
      - date
      - time
      - date-time
      - files
      - table
      - logo
      - small-text
      - html
      - submit
      - select
      - autocomplete
      - autocomplete-multiple 

  MetaformTableColumn:
    type: "object"
    properties:
      type:
        $ref: '#/definitions/MetaformTableColumnType'
      title:
        type: "string"
        description: Column title
      calculate-sum:
        type: "boolean"
        description: Defines column should automatically calculate sum
      sum-postfix:
        type: "string"
        description: Postfix for calculated sum
      column-width:
        type: "integer"
        description: Defines column width
        format: int32
      placeholder:
        type: "string"
        description: Placeholder for column field
      readonly:
        type: "boolean"
        description: Defines column as readonly
      required:
        type: "boolean"
        description: Defines column as requires
      source-url:
        type: "string"
        format: "url"
        description: Defines source url for autocomplete columns
      html:
        type: "string"
        description: Html code for html columns
      action:
        type: "string"
        description: Action for button columns
      values:
        type: "object"
        description: Values for enum columns
        properties:
          value: 
            type: "string"
          other:
            type: "string"
          text:
            type: "string"

  MetaformTableColumnType:
    type: "string"
    enum:
      - hidden
      - text
      - autocomplete
      - number
      - enum
      - date
      - time
      - html
      - button
        
  MetaformFieldOption:
    type: "object"
    description: Option object for Metaform field
    required:
      - name
      - text
    properties:
      name:
        description: Option name
        type: "string"
      text:
        description: Option text
        type: "string"
      checked:
        description: Defines whether option should be checked by default.
        type: boolean
      selected:
        description: Defines whether option should be selected by default.
        type: boolean
        
  MetaformVisibleIf:
    type: "object"
    description: Rule that defines whether specified object is visible
    properties:
      field: 
        type: "string"
        description: Field where the visible if rule is relative to
      equals:
        type: "string"
        description: Value must be equal to this value. If value is specified "true" field must have any value selected
      not-equals:
        type: "string"
        description: Value must be not equal to this value.
      and:
        type: "array"
        items: 
          $ref: '#/definitions/MetaformVisibleIf'
      or:
        type: "array"
        items: 
          $ref: '#/definitions/MetaformVisibleIf'
        
  EmailNotification:
    type: "object"
    description: Email notification
    required: 
      - emails
      - subjectTemplate
      - contentTemplate
    properties:
      id:
        type: "string"
        format: "uuid"
      subjectTemplate:
        type: "string"
      contentTemplate:
        type: "string"
      emails:
        type: "array"
        items: 
          type: "string"
          
  InternalServerError:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
        
  Forbidden:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
        
  BadRequest:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
        
  NotImplemented:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
        
  NotFound:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
