openapi: 3.0.0
info:
  title: Metaform REST API
  description: REST API for Metaform
  version: 2.1.0
security:
  - bearer: []
paths:
  "/v1/metaforms":
    get:
      operationId: listMetaforms
      summary: Lists Metaforms
      description: Lists Metaforms. User receives only metaforms where
        he/she has permission to.
      tags:
        - Metaforms
      responses:
        "200":
          description: A list of metaforms
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Metaform"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createMetaform
      summary: create new Metaform
      description: Creates new Metaform
      tags:
        - Metaforms
      requestBody:
        $ref: "#/components/requestBodies/Metaform"
      responses:
        "200":
          description: Created Metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Metaform"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/metaforms/{metaformId}":
    get:
      operationId: findMetaform
      summary: Finds single Metaform
      description: Finds a single Metaform
      tags:
        - Metaforms
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: replyId
          in: query
          description: |
            Id of reply the form is loaded for. Reply id needs to be defined when
            unanonymous form is authenticated with owner key
          schema:
            type: string
            format: uuid
        - name: ownerKey
          in: query
          description: Reply owner key
          schema:
            type: string
      responses:
        "200":
          description: A metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Metaform"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateMetaform
      summary: Updates Metaform
      description: Updates a Metaform
      tags:
        - Metaforms
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/Metaform"
      responses:
        "200":
          description: Updated Metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Metaform"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteMetaform
      summary: Deletes Metaform
      description: Deletes a Metaform
      tags:
        - Metaforms
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty content indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/metaforms/{metaformId}/auditLogEntries":
    get:
      operationId: listAuditLogEntries
      summary: Lists all audit log entries for metaform
      description: Lists all audit log entries for metaform
      tags:
        - AuditLogEntries
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: userId
          in: query
          description: Filter results by user id.
          schema:
            type: string
            format: uuid
        - name: replyId
          in: query
          description: Filter results by reply id
          schema:
            type: string
            format: uuid
        - name: createdBefore
          description: Filter results created before specified time
          in: query
          schema:
            type: string
        - name: createdAfter
          description: Filter results created after specified time
          in: query
          schema:
            type: string

      responses:
        "200":
          description: A list of log entries
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuditLogEntry"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/metaforms/{metaformId}/auditLogEntries/{auditLogEntryId}":
    delete:
      operationId: deleteAuditLogEntry
      summary: Deletes an audit log
      description: Deletes an audit log
      tags:
        - AuditLogEntries
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: auditLogEntryId
          required: true
          in: path
          description: Audit log entry id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty content indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/metaforms/{metaformId}/replies":
    get:
      operationId: listReplies
      summary: Lists form replies
      description: Lists form replies
      tags:
        - Replies
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: userId
          in: query
          description: Filter results by user id. If this parameter is not specified all
            replies are returned, this requires logged user to have proper
            permission to do so
          schema:
            type: string
            format: uuid
        - name: createdBefore
          description: Filter results created before specified time
          in: query
          schema:
            type: string
        - name: createdAfter
          description: Filter results created after specified time
          in: query
          schema:
            type: string
        - name: modifiedBefore
          description: Filter results modified before specified time
          in: query
          schema:
            type: string
        - name: modifiedAfter
          description: Filter results modified after specified time
          in: query
          schema:
            type: string
        - name: includeRevisions
          in: query
          description: Specifies that revisions should be included into response
          schema:
            type: boolean
        - name: fields
          in: query
          description: Filter results by field values. Format is field:value, multiple
            values can be added by using comma separator. E.g.
            field1=value,field2=another
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: firstResult
          in: query
          description: First index of results to be returned
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A list of replies
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Reply"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createReply
      summary: create new form reply
      description: Creates new form reply
      tags:
        - Replies
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: updateExisting
          in: query
          description: specifies that existing reply should be updated. DEPRECATED, use
            replymode instead
          schema:
            type: boolean
        - name: replyMode
          in: query
          description: specifies reply mode that will be used. possible values UPDATE,
            REVISION, CUMULATIVE
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Reply"
      responses:
        "200":
          description: Created reply
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Reply"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaforms/{metaformId}/export":
    get:
      operationId: export
      summary: Exports metaform data
      description: Exports metaform data
      tags:
        - Replies
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: format
          in: query
          description: Export results in specified format (XLSX)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Exported Metaform
          content:
            application/json;charset=utf-8:
              schema:
                type: string
                format: binary
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/metaforms/{metaformId}/replies/{replyId}":
    get:
      operationId: findReply
      summary: Find a single reply
      description: Finds single reply by id
      tags:
        - Replies
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: replyId
          required: true
          in: path
          description: Reply id
          schema:
            type: string
            format: uuid
        - name: ownerKey
          in: query
          description: Reply owner key
          schema:
            type: string
      responses:
        "200":
          description: A reply
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Reply"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateReply
      summary: Updates reply
      description: Updates reply
      tags:
        - Replies
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: replyId
          required: true
          in: path
          description: Reply id
          schema:
            type: string
            format: uuid
        - name: ownerKey
          in: query
          description: Reply owner key
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Reply"
      responses:
        "204":
          description: Empty response indicating a succesful update
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteReply
      summary: Deletes a reply
      description: Deletes a reply
      tags:
        - Replies
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: replyId
          required: true
          in: path
          description: Reply id
          schema:
            type: string
            format: uuid
        - name: ownerKey
          in: query
          description: Reply owner key
          schema:
            type: string
      responses:
        "204":
          description: Empty content indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/metaforms/{metaformId}/replies/{replyId}/export":
    get:
      operationId: replyExport
      summary: Exports reply data
      description: Exports reply data
      tags:
        - Replies
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: replyId
          required: true
          in: path
          description: Reply id
          schema:
            type: string
            format: uuid
        - name: format
          in: query
          description: Export results in specified format (PDF)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Exported reply
          content:
            application/json;charset=utf-8:
              schema:
                type: string
                format: binary
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/metaforms/{metaformId}/drafts":
    post:
      operationId: createDraft
      summary: create new reply draft
      description: Creates new reply draft
      tags:
        - Drafts
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/Draft"
      responses:
        "200":
          description: Created draft
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Draft"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/metaforms/{metaformId}/drafts/{draftId}":
    get:
      operationId: findDraft
      summary: Finds single draft
      description: Finds single draft
      tags:
        - Drafts
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: draftId
          required: true
          in: path
          description: draft id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: single draft
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Draft"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateDraft
      summary: Updates draft
      description: Updates draft
      tags:
        - Drafts
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: draftId
          required: true
          in: path
          description: draft id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/Draft"
      responses:
        "200":
          description: updated draft
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Draft"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteDraft
      summary: Deletes an draft
      description: Deletes an draft
      tags:
        - Drafts
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: draftId
          required: true
          in: path
          description: draft id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/metaforms/{metaformId}/emailNotifications":
    get:
      operationId: listEmailNotifications
      summary: Lists form email notifications
      description: Lists email notifications
      tags:
        - EmailNotifications
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A list of email notifications
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmailNotification"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createEmailNotification
      summary: create new form email notification
      description: Creates new form email notification
      tags:
        - EmailNotifications
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/EmailNotification"
      responses:
        "200":
          description: Created email notification
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/EmailNotification"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/metaforms/{metaformId}/emailNotifications/{emailNotificationId}":
    get:
      operationId: findEmailNotification
      summary: Find a single emai notification
      description: Finds single email notification by id
      tags:
        - EmailNotifications
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: emailNotificationId
          required: true
          in: path
          description: EmailNotification id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: an email notification
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/EmailNotification"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateEmailNotification
      summary: Updates email notification
      description: Updates email notification
      tags:
        - EmailNotifications
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: emailNotificationId
          required: true
          in: path
          description: EmailNotification id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/EmailNotification"
      responses:
        "200":
          description: an email notification
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/EmailNotification"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteEmailNotification
      summary: Deletes an email notification
      description: Deletes an email notification
      tags:
        - EmailNotifications
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: emailNotificationId
          required: true
          in: path
          description: Email notification id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/exportThemes":
    get:
      operationId: listExportThemes
      summary: Lists form export themes
      description: Lists export themes
      tags:
        - ExportThemes
      responses:
        "200":
          description: A list of export themes
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExportTheme"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createExportTheme
      summary: create new form export theme
      description: Creates new form export theme
      tags:
        - ExportThemes
      requestBody:
        $ref: "#/components/requestBodies/ExportTheme"
      responses:
        "200":
          description: Created export theme
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ExportTheme"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/exportThemes/{exportThemeId}":
    get:
      operationId: findExportTheme
      summary: Finds single export theme
      description: Finds single export theme
      tags:
        - ExportThemes
      parameters:
        - name: exportThemeId
          required: true
          in: path
          description: export theme id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: single export theme
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ExportTheme"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateExportTheme
      summary: Updates export theme
      description: Updates export theme
      tags:
        - ExportThemes
      parameters:
        - name: exportThemeId
          required: true
          in: path
          description: ExportTheme id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/ExportTheme"
      responses:
        "200":
          description: an updated export theme
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ExportTheme"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteExportTheme
      summary: Deletes an export theme
      description: Deletes an export theme
      tags:
        - ExportThemes
      parameters:
        - name: exportThemeId
          required: true
          in: path
          description: export theme id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/exportThemes/{exportThemeId}/files":
    get:
      operationId: listExportThemeFiles
      summary: Lists files of export theme
      description: Lists files of export theme
      tags:
        - ExportThemeFiles
      parameters:
        - name: exportThemeId
          required: true
          in: path
          description: export theme id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A list of export theme files
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExportThemeFile"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createExportThemeFile
      summary: create new export theme file
      description: Creates new export theme file
      tags:
        - ExportThemeFiles
      parameters:
        - name: exportThemeId
          required: true
          in: path
          description: export theme id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/ExportThemeFile"
      responses:
        "200":
          description: Created export theme file
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ExportThemeFile"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/exportThemes/{exportThemeId}/files/{exportThemeFileId}":
    get:
      operationId: findExportThemeFile
      summary: Finds single export theme file
      description: Finds single export theme file
      tags:
        - ExportThemeFiles
      parameters:
        - name: exportThemeId
          required: true
          in: path
          description: export theme id
          schema:
            type: string
            format: uuid
        - name: exportThemeFileId
          required: true
          in: path
          description: export theme file id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: single export theme file
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ExportThemeFile"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateExportThemeFile
      summary: Updates export theme file
      description: Updates export theme file
      tags:
        - ExportThemeFiles
      parameters:
        - name: exportThemeId
          required: true
          in: path
          description: ExportTheme id
          schema:
            type: string
            format: uuid
        - name: exportThemeFileId
          required: true
          in: path
          description: ExportThemeFile file id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/ExportThemeFile"
      responses:
        "200":
          description: an updated export theme file
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ExportThemeFile"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteExportThemeFile
      summary: Deletes an export theme file
      description: Deletes an export theme file
      tags:
        - ExportThemeFiles
      parameters:
        - name: exportThemeId
          required: true
          in: path
          description: export theme id
          schema:
            type: string
            format: uuid
        - name: exportThemeFileId
          required: true
          in: path
          description: export theme file id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/attachments/{attachmentId}":
    get:
      operationId: findAttachment
      summary: Find a attachment by id
      description: Returns single attachment
      parameters:
        - name: attachmentId
          in: path
          description: Attachment id
          required: true
          schema:
            type: string
            format: uuid
        - name: ownerKey
          in: query
          description: Reply owner key
          schema:
            type: string
      tags:
        - Attachments
      responses:
        "200":
          description: an attachment
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Attachment"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/attachments/{attachmentId}/data":
    get:
      operationId: findAttachmentData
      summary: Find a attachment data by id
      description: Returns attachment data
      parameters:
        - name: attachmentId
          in: path
          description: Attachment id
          required: true
          schema:
            type: string
            format: uuid
        - name: ownerKey
          in: query
          description: Reply owner key
          schema:
            type: string
      tags:
        - Attachments
      responses:
        "200":
          description: Returns an attachment data
          content:
            application/json;charset=utf-8:
              schema:
                type: string
                format: binary
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  /v1/system/ping:
    get:
      summary: System ping endpoint
      operationId: ping
      tags:
        - system
      responses:
        '200':
          description: System ping response
          content:
            text/plain:
              schema:
                type: string
                description: Returns pong

components:
  requestBodies:
    Reply:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/Reply"
      description: Payload
      required: true
    Draft:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/Draft"
      description: Payload
      required: true
    Metaform:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/Metaform"
      description: Payload
      required: true
    ExportThemeFile:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/ExportThemeFile"
      description: Payload
      required: true
    EmailNotification:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/EmailNotification"
      description: Payload
      required: true
    ExportTheme:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/ExportTheme"
      description: Payload
      required: true
    AuditLogEntry:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/AuditLogEntry"
      description: Payload
      required: true
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Reply:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        revision:
          type: string
          format: date-time
        ownerKey:
          type: string
          readOnly: true
          description: |
            Reply owner key allows user to perform edit and delete operations on given reply.
            Key is returned only once on creation time and will not be recorable afterwards.
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
        data:
          $ref: "#/components/schemas/ReplyData"
    ReplyData:
      type: object
      additionalProperties:
        type: object
    Metaform:
      type: object
      properties:
        id:
          type: string
          format: uuid
        replyStrategy:
          type: string
          enum:
            - PUBLIC
            - PRIVATE
        exportThemeId:
          type: string
          format: uuid
        allowAnonymous:
          type: boolean
          description: Are anonymous replies allowed or not
        allowDrafts:
          type: boolean
          description: Are drafts allowed or not
        allowReplyOwnerKeys:
          type: boolean
          description: Generate reply owner keys to replies.
        allowInvitations:
          type: boolean
          description: Enable invitation functionality
        autosave:
          type: boolean
          description: Toggles the autosaving functionality on the form. When autosaving is enabled the form will save automatically every time form values change
        title:
          type: string
        sections:
          type: array
          items:
            $ref: "#/components/schemas/MetaformSection"
        filters:
          type: array
          items:
            $ref: "#/components/schemas/MetaformFilter"
        scripts:
          type: object
          properties:
            afterCreateReply:
              type: array
              description: List of scripts run after new reply is created
              items:
                $ref: "#/components/schemas/MetaformScript"
            afterUpdateReply:
              type: array
              description: List of scripts run after a reply is updated
              items:
                $ref: "#/components/schemas/MetaformScript"
            metaformExportXlsx:
              type: array
              description: List of scripts run when generating a metaform Excel export
              items:
                $ref: "#/components/schemas/MetaformScript"

    MetaformFilter:
      type: object
      required:
        - id
        - name
        - filter
      properties:
        id:
          type: string
        name:
          type: string
        fields:
          type: array
          description: Predefined list replies filter. Format is field:value
          items:
            type: string

    MetaformScript:
      type: object
      required:
        - name
        - language
        - content
      properties:
        name:
          type: string
        language:
          type: string
        content:
          type: string
    MetaformSection:
      type: object
      properties:
        title:
          type: string
        visible-if:
          $ref: "#/components/schemas/FieldRule"
        fields:
          type: array
          items:
            $ref: "#/components/schemas/MetaformField"
    MetaformField:
      type: object
      required:
        - type
      properties:
        visible-if:
          $ref: "#/components/schemas/FieldRule"
        permission-contexts:
          type: object
          properties:
            view-group:
              type: boolean
              description: Field value is used as security group with view permission
              default: false
            edit-group:
              type: boolean
              description: Field value is used as security group with edit permission
              default: false
            notify-group:
              type: boolean
              description: Field value is used as security group with notification
                permission
              default: false
        name:
          type: string
          description: Field name
        type:
          $ref: "#/components/schemas/MetaformFieldType"
        title:
          type: string
        required:
          type: boolean
        contexts:
          type: array
          items:
            type: string
        flags:
          $ref: "#/components/schemas/MetaformFieldFlags"
        placeholder:
          type: string
        class:
          type: string
        readonly:
          type: boolean
        help:
          type: string
        default:
          description: a default value for a field
          type: string
        min:
          type: integer
          format: int32
          description: Minimum value for a field. Only for number fields
        max:
          type: integer
          format: int32
          description: Maximum value for a field. Only for number fields
        step:
          type: integer
          format: int32
          description: Value step for a field. Only for number fields
        checked:
          type: boolean
          description: Whether checkbox should be checked by default. Only for checkbox
            fields
        printable:
          type: boolean
          description: Defines whether field is printable or not. Only for table fields
        options:
          type: array
          description: Options for radio, checklist, select fields
          items:
            $ref: "#/components/schemas/MetaformFieldOption"
        source-url:
          type: string
          description: Source url for autocomplete and autocomplete-multiple fields
          format: url
        upload-url:
          type: string
          description: Upload url for files field.
          format: url
        single-file:
          type: boolean
          description: Defines whether file fields allow multiple files or just one
        only-images:
          type: boolean
          description: Defines whether file fields allow only images
        max-file-size:
          type: integer
          format: int64
          description: Maximum upload size for image filds
        add-rows:
          type: boolean
          description: Defines whether user can add more table rows.
        draggable:
          type: boolean
          description: Defines whether table rows should be draggable.
        columns:
          type: array
          description: Columns for table fields
          items:
            $ref: "#/components/schemas/MetaformTableColumn"
        src:
          type: string
          description: Url for logo field.
          format: url
        text:
          type: string
          description: Text for small field.
        html:
          type: string
          description: Html code for html field.
        source:
          $ref: "#/components/schemas/MetaformFieldSource"
          
    MetaformFieldFlags:
      type: object
      properties:
        managementEditable:
          type: boolean
          description: Field should be editable in management service
          default: false
    MetaformFieldType:
      type: string
      enum:
        - text
        - url
        - hidden
        - email
        - number
        - slider
        - memo
        - boolean
        - radio
        - checklist
        - date
        - time
        - date-time
        - files
        - table
        - logo
        - small-text
        - html
        - submit
        - select
        - autocomplete
        - autocomplete-multiple
        - code-server-concept-code-search
    MetaformTableColumn:
      type: object
      required:
        - type
        - name
      properties:
        type:
          $ref: "#/components/schemas/MetaformTableColumnType"
        name:
          type: string
          description: Column name
        title:
          type: string
          description: Column title
        calculate-sum:
          type: boolean
          description: Defines column should automatically calculate sum
        sum-postfix:
          type: string
          description: Postfix for calculated sum
        column-width:
          type: integer
          description: Defines column width
          format: int32
        placeholder:
          type: string
          description: Placeholder for column field
        readonly:
          type: boolean
          description: Defines column as readonly
        required:
          type: boolean
          description: Defines column as requires
        source-url:
          type: string
          format: url
          description: Defines source url for autocomplete columns
        html:
          type: string
          description: Html code for html columns
        action:
          type: string
          description: Action for button columns
        values:
          type: object
          description: Values for enum columns
          properties:
            value:
              type: string
            other:
              type: string
            text:
              type: string
    MetaformTableColumnType:
      type: string
      enum:
        - hidden
        - text
        - url
        - email
        - autocomplete
        - number
        - date
        - time
        - html
        - button
        - enum
    MetaformFieldOption:
      type: object
      description: Option object for Metaform field
      required:
        - name
        - text
      properties:
        name:
          description: Option name
          type: string
        text:
          description: Option text
          type: string
        checked:
          description: Defines whether option should be checked by default.
          type: boolean
        selected:
          description: Defines whether option should be selected by default.
          type: boolean

    MetaformFieldSource:
      type: object
      description: Field value source. Defaults to using user's reply.
      required:
        - strategy
      properties:
        strategy:
          $ref: "#/components/schemas/MetaformFieldSourceStrategy"
        codeServer:
          type: object
          required:
            - attributeName
          properties:
            attributeName: 
              description: Attribute name
              type: string

    MetaformFieldSourceStrategy:
      type: string
      enum:
        - default
        - replyMeta
        - accessToken
        - codeServerConceptCode

    FieldRule:
      type: object
      description: Rule for determining field value. Used in visible if and email notify if rules
      properties:
        field:
          type: string
          description: Field where the visible if rule is relative to
        equals:
          type: string
          description: Value must be equal to this value. If value is specified "true"
            field must have any value selected
        not-equals:
          type: string
          description: Value must be not equal to this value.
        and:
          type: array
          items:
            $ref: "#/components/schemas/FieldRule"
        or:
          type: array
          items:
            $ref: "#/components/schemas/FieldRule"
    EmailNotification:
      type: object
      description: Email notification
      required:
        - emails
        - subjectTemplate
        - contentTemplate
      properties:
        id:
          type: string
          format: uuid
        subjectTemplate:
          type: string
        contentTemplate:
          type: string
        emails:
          type: array
          items:
            type: string
        notifyIf:
          $ref: "#/components/schemas/FieldRule"
    Attachment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Entity identifier
        name:
          description: Attachment's name
          type: string
        contentType:
          description: Attachment's content type (e.g. application/pdf)
          type: string
    ExportTheme:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        parentId:
          type: string
          format: uuid
        locales:
          type: string
    ExportThemeFile:
      type: object
      required:
        - path
        - themeId
        - content
      properties:
        id:
          type: string
          format: uuid
        path:
          type: string
        themeId:
          type: string
          format: uuid
        content:
          type: string
    ReplyExportFormat:
      type: string
      enum:
        - XLSX
        - PDF

    Draft:
      type: object
      required:
        - data
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        data:
          $ref: "#/components/schemas/DraftData"
        createdAt:
          type: string
          format: date-time
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          readOnly: true

    DraftData:
      type: object
      additionalProperties:
        type: object

    AuditLogEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Entity identifier
        userId:
          type: string
          format: uuid
          readOnly: true
          description: Id of creator user
        replyId:
          type: string
          format: uuid
          readOnly: true
          description: Id of the reply
        attachmentId:
          type: string
          format: uuid
          readOnly: true
          description: Id of the attachment
        createdAt:
          type: string
          format: date-time
          readOnly: true
          description: Time of accessing the reply
        message:
          type: string
          readOnly: true
          description: Description of the event
        logEntryType:
          $ref: "#/components/schemas/AuditLogEntryType"

    AuditLogEntryType:
      type: string
      enum:
        - VIEW_REPLY
        - LIST_REPLY
        - MODIFY_REPLY
        - DELETE_REPLY
        - CREATE_REPLY
        - VIEW_REPLY_ATTACHMENT
        - DOWNLOAD_REPLY_ATTACHMENT
        - EXPORT_REPLY_PDF
        - EXPORT_REPLY_XLSX

    InternalServerError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Forbidden:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    BadRequest:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    NotImplemented:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    NotFound:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string