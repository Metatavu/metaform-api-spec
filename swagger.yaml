openapi: 3.0.3
info:
  title: Metaform REST API
  description: REST API for Metaform
  version: 2.1.0
security:
  - bearer: []
paths:
  "/v1/metaforms":
    get:
      operationId: listMetaforms
      summary: Lists Metaforms
      description: |
        Lists Metaforms.

        Method allows public metaforms for all users but private metaforms require that user is logged in
      tags:
        - Metaforms
      parameters:
        - name: visibility
          in: query
          description: Filter metaforms by visibility
          schema:
            $ref: "#/components/schemas/MetaformVisibility"
        - name: memberRole
          in: query
          description: |
            Filter results by logged user's role in the form. 
            
            User's role has to be either the one specified or higher, so for example when filtering by manager, 
            metaform administrator and system administrator roles are also included.
          schema:
            $ref: "#/components/schemas/MetaformMemberRole"
      responses:
        "200":
          description: A list of metaforms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Metaform"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createMetaform
      summary: create new Metaform
      description: |
        Creates new Metaform

        Method is allowed for system administrators
      tags:
        - Metaforms
      requestBody:
        $ref: "#/components/requestBodies/Metaform"
      responses:
        "200":
          description: Created Metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Metaform"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "409":
          description: Conflicted request was sent to server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Conflict"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaform":
    get:
      operationId: findMetaform
      summary: Finds single Metaform
      description: |
        Finds a Metaform by slug or id

        Method allows public metaforms for all users but private metaforms require that logged user is either system admin, metaform admin or metaform manager
      tags:
        - Metaforms
      parameters:
        - name: metaformSlug
          required: false
          in: query
          description: Metaform slug
          schema:
            type: string
        - name: metaformId
          required: false
          in: query
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: replyId
          in: query
          description: |
            Id of reply the form is loaded for. Reply id needs to be defined when
            anonymous form is authenticated with owner key
          schema:
            type: string
            format: uuid
        - name: ownerKey
          in: query
          description: Reply owner key
          schema:
            type: string
      responses:
        "200":
          description: A metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Metaform"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaforms/{metaformId}":
    put:
      operationId: updateMetaform
      summary: Updates Metaform
      description: |
        Updates Metaform

        Method is allowed for system administrators and metaform administrators
      tags:
        - Metaforms
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/Metaform"
      responses:
        "200":
          description: Updated Metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Metaform"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "409":
          description: Conflicted request was sent to server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Conflict"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteMetaform
      summary: Deletes Metaform
      description: |
        Deletes Metaform

        Method is allowed for system administrators and metaform administrators
      tags:
        - Metaforms
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty content indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaforms/{metaformId}/versions":
    get:
      operationId: listMetaformVersions
      summary: Lists all the versions of Metaform
      description: |
        Lists Metaform versions

        Method requires that logged user is either system admin or metaform admin
      tags:
        - Versions
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Metaform versions
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MetaformVersion"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createMetaformVersion
      summary: Create new Metaform version
      description: |
        Creates new Metaform version

        Method requires that logged user is either system admin or metaform admin
      tags:
        - Versions
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/MetaformVersion"
      responses:
        "200":
          description: Created Metaform version
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/MetaformVersion"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "409":
          description: Conflicted request was sent to server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Conflict"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaforms/{metaformId}/versions/{versionId}":
    get:
      operationId: findMetaformVersion
      summary: Finds Version of Metaform
      description: |
        Finds a Metaform version

        Method requires that logged user is either system admin or metaform admin
      tags:
        - Versions
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: versionId
          required: true
          in: path
          description: Metaform version id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Metaform version
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/MetaformVersion"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateMetaformVersion
      summary: Updates MetaformVersion
      description: |
        Updates a Metaform version

        Method requires that logged user is either system admin or metaform admin
      tags:
        - Versions
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: versionId
          required: true
          in: path
          description: Metaform version id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/MetaformVersion"
      responses:
        "200":
          description: Updated MetaformVersion
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/MetaformVersion"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to a make call to a non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "409":
          description: Conflicted request was sent to server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Conflict"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteMetaformVersion
      summary: Deletes Metaform version
      description: |
        Deletes a Metaform version

        Method requires that logged user is either system admin or metaform admin
      tags:
        - Versions
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: versionId
          required: true
          in: path
          description: Metaform version id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty content indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaforms/{metaformId}/auditLogEntries":
    get:
      operationId: listAuditLogEntries
      summary: Lists audit log entries for metaform
      description: |
        Lists audit log entries for metaform

        Method requires that logged user is system admin
      tags:
        - AuditLogEntries
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: userId
          in: query
          description: Filter results by user id.
          schema:
            type: string
            format: uuid
        - name: replyId
          in: query
          description: Filter results by reply id
          schema:
            type: string
            format: uuid
        - name: createdBefore
          description: Filter results created before specified time
          in: query
          schema:
            type: string
        - name: createdAfter
          description: Filter results created after specified time
          in: query
          schema:
            type: string

      responses:
        "200":
          description: A list of log entries
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuditLogEntry"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaforms/{metaformId}/auditLogEntries/{auditLogEntryId}":
    delete:
      operationId: deleteAuditLogEntry
      summary: Deletes an audit log
      description: |
        Deletes an audit log. Method is allowed only when system is running in test mode
      tags:
        - AuditLogEntries
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: auditLogEntryId
          required: true
          in: path
          description: Audit log entry id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty content indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaforms/{metaformId}/replies":
    get:
      operationId: listReplies
      summary: Lists form replies
      description: |
        Lists form replies

        Method allows system administrators, metaform administrators and metaform managers to list all replies. Otherwise user must have reply:view scope permission for given reply. Permissions are handled by the Keycloak authorization system.
      tags:
        - Replies
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: userId
          in: query
          description: Filter results by user id. If this parameter is not specified all
            replies are returned, this requires logged user to have proper
            permission to do so
          schema:
            type: string
            format: uuid
        - name: createdBefore
          description: Filter results created before specified time
          in: query
          schema:
            type: string
        - name: createdAfter
          description: Filter results created after specified time
          in: query
          schema:
            type: string
        - name: modifiedBefore
          description: Filter results modified before specified time
          in: query
          schema:
            type: string
        - name: modifiedAfter
          description: Filter results modified after specified time
          in: query
          schema:
            type: string
        - name: includeRevisions
          in: query
          description: Specifies that revisions should be included into response
          schema:
            type: boolean
        - name: fields
          in: query
          description: Filter results by field values. Format is field:value, multiple
            values can be added by using comma separator. E.g.
            field1=value,field2=another
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: firstResult
          in: query
          description: First index of results to be returned
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: The criteria to order the replies by
          required: false
          schema:
            $ref: '#/components/schemas/ReplyOrderCriteria'
        - name: latestFirst
          in: query
          description: When using orderBy, return the latest reply first
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: A list of replies
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Reply"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createReply
      summary: create new form reply
      description: |
        Creates new form reply

        For public forms that have allowAnonymous flag on, method requires that user is logged in for forms without the allowAnonymous flag, user needs to have "user" role in order to post the reply.
      tags:
        - Replies
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: updateExisting
          in: query
          description: specifies that existing reply should be updated. DEPRECATED, use
            replymode instead
          schema:
            type: boolean
        - name: replyMode
          in: query
          description: specifies reply mode that will be used. possible values UPDATE,
            REVISION, CUMULATIVE
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Reply"
      responses:
        "200":
          description: Created reply
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Reply"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaforms/{metaformId}/export":
    get:
      operationId: export
      summary: Exports metaform data
      description: |
        Exports metaform data

        Method requires that logged user is either system admin or metaform admin
      tags:
        - Replies
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: format
          in: query
          description: Export results in specified format (XLSX)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Exported Metaform
          content:
            application/json;charset=utf-8:
              schema:
                type: string
                format: binary
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/metaforms/{metaformId}/replies/{replyId}":
    get:
      operationId: findReply
      summary: Find a single reply
      description: |
        Finds single reply

        Method allows system administrators, metaform administrators and metaform managers to find a reply. Otherwise user must have reply:view scope permission for given reply. Permissions are handled by the Keycloak authorization system.
      tags:
        - Replies
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: replyId
          required: true
          in: path
          description: Reply id
          schema:
            type: string
            format: uuid
        - name: ownerKey
          in: query
          description: Reply owner key
          schema:
            type: string
      responses:
        "200":
          description: A reply
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Reply"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateReply
      summary: Updates reply
      description: |
        Updates reply

        Method allows system administrators, metaform administrators and metaform managers to update a reply. Otherwise user must have reply:edit scope permission for given reply. Permissions are handled by the Keycloak authorization system.
      tags:
        - Replies
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: replyId
          required: true
          in: path
          description: Reply id
          schema:
            type: string
            format: uuid
        - name: ownerKey
          in: query
          description: Reply owner key
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Reply"
      responses:
        "204":
          description: Empty response indicating a succesful update
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteReply
      summary: Deletes a reply
      description: |
        Deletes a reply

        Method allows system administrators and metaform administrators to delete a reply. Otherwise user must have reply:edit scope permission for given reply. Permissions are handled by the Keycloak authorization system.
      tags:
        - Replies
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: replyId
          required: true
          in: path
          description: Reply id
          schema:
            type: string
            format: uuid
        - name: ownerKey
          in: query
          description: Reply owner key
          schema:
            type: string
      responses:
        "204":
          description: Empty content indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaforms/{metaformId}/replies/{replyId}/export":
    get:
      operationId: replyExport
      summary: Exports reply data
      description: |
        Exports reply data

        Method allows system administrators, metaform administrators and metaform managers to export reply data. Otherwise user must have reply:view scope permission for given reply. Permissions are handled by the Keycloak authorization system.
      tags:
        - Replies
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: replyId
          required: true
          in: path
          description: Reply id
          schema:
            type: string
            format: uuid
        - name: format
          in: query
          description: Export results in specified format (PDF)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Exported reply
          content:
            application/json;charset=utf-8:
              schema:
                type: string
                format: binary
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaforms/{metaformId}/drafts":
    post:
      operationId: createDraft
      summary: Create new reply draft
      description: |
        Create reply draft

        Form needs to have allowDrafts flag on, otherwise method will return forbidden

        For public forms that have allowAnonymous flag on, method requires that user is logged in for forms without the allowAnonymous flag, user needs to have "user" role in order to create the draft.
      tags:
        - Drafts
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/Draft"
      responses:
        "200":
          description: Created draft
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Draft"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaforms/{metaformId}/drafts/{draftId}":
    get:
      operationId: findDraft
      summary: Finds single draft
      description: |
        Finds reply draft

        Form needs to have allowDrafts flag on, otherwise method will return forbidden.

        For public forms that have allowAnonymous flag on, method requires that user is logged in for forms without the allowAnonymous flag, user needs to have "user" role and the creator of the draft must match the logged user id
      tags:
        - Drafts
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: draftId
          required: true
          in: path
          description: draft id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: single draft
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Draft"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateDraft
      summary: Updates draft
      description: |
        Updates reply draft

        Form needs to have allowDrafts flag on, otherwise method will return forbidden

        For public forms that have allowAnonymous flag on, method requires that user is logged in for forms without the allowAnonymous flag, user needs to have "user" role and the creator of the draft must match the logged user id
      tags:
        - Drafts
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: draftId
          required: true
          in: path
          description: draft id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/Draft"
      responses:
        "200":
          description: updated draft
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Draft"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteDraft
      summary: Deletes an draft
      description: |
        Deletes reply draft

        Form needs to have allowDrafts flag on, otherwise method will return forbidden

        For public forms that have allowAnonymous flag on, method requires that user is logged in for forms without the allowAnonymous flag, user needs to have "user" role and the creator of the draft must match the logged user id
      tags:
        - Drafts
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: draftId
          required: true
          in: path
          description: draft id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaforms/{metaformId}/members":
    post:
      operationId: createMetaformMember
      summary: create new metaform member
      description: |
        Creates new metaform member

        Method is allowed only for system administrators and metaform administrators
      tags:
        - MetaformMembers
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/MetaformMember"
      responses:
        "200":
          description: Created metaform member
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/MetaformMember"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    get:
      operationId: listMetaformMembers
      summary: list all metaform members
      description: |
        Lists all metaform members

        Method is allowed only for system administrators and metaform administrators
      tags:
        - MetaformMembers
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: role
          in: query
          description: Metaform member role
          schema:
            $ref: "#/components/schemas/MetaformMemberRole"
      responses:
        "200":
          description: Listed metaform members
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MetaformMember"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaforms/{metaformId}/members/{metaformMemberId}":
    get:
      operationId: findMetaformMember
      summary: Finds a metaform member
      description: |
        Finds metaform member

        Method is allowed only for system administrators and metaform administrators
      tags:
        - MetaformMembers
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: metaformMemberId
          required: true
          in: path
          description: member id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: single metaform member
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/MetaformMember"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateMetaformMember
      summary: Updates metaform member
      description: |
        Updates metaform member

        Method is allowed only for system administrators and metaform administrators
      tags:
        - MetaformMembers
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: metaformMemberId
          required: true
          in: path
          description: Metaform member id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/MetaformMember"
      responses:
        "200":
          description: updated metaform member
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/MetaformMember"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteMetaformMember
      summary: Deletes metaform member
      description: |
        Deletes metaform member

        Method is allowed only for system administrators and metaform administrators
      tags:
        - MetaformMembers
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: metaformMemberId
          required: true
          in: path
          description: member id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaforms/{metaformId}/memberGroups":
    post:
      operationId: createMetaformMemberGroup
      summary: Create new metaform member group
      description: |
        Creates metaform member group

        Method is allowed only for system administrators and metaform administrators
      tags:
        - MetaformMemberGroups
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/MetaformMemberGroup"
      responses:
        "200":
          description: Created metaform manager group
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/MetaformMemberGroup"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    get:
      operationId: listMetaformMemberGroups
      summary: list all metaform member groups
      description: |
        Lists all metaform member groups

        Method is allowed only for system administrators and metaform administrators
      tags:
        - MetaformMemberGroups
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Listed metaform member groups
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MetaformMemberGroup"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaforms/{metaformId}/memberGroups/{metaformMemberGroupId}":
    get:
      operationId: findMetaformMemberGroup
      summary: Finds single metaform member group
      description: |
        Find metaform member group

        Method is allowed only for system administrators and metaform administrators
      tags:
        - MetaformMemberGroups
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: metaformMemberGroupId
          required: true
          in: path
          description: membergroup id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Single metaform manager group
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/MetaformMemberGroup"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateMetaformMemberGroup
      summary: Updates metaform member group
      description: |
        Updates metaform member group

        Method is allowed only for system administrators and metaform administrators
      tags:
        - MetaformMemberGroups
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: metaformMemberGroupId
          required: true
          in: path
          description: Metaform manager group id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/MetaformMemberGroup"
      responses:
        "200":
          description: updated metaform manager group
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/MetaformMemberGroup"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteMetaformMemberGroup
      summary: Deletes metaform manager group
      description: |
        Deletes metaform member group

        Method is allowed only for system administrators and metaform administrators
      tags:
        - MetaformMemberGroups
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: metaformMemberGroupId
          required: true
          in: path
          description: membergroup id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/metaforms/{metaformId}/emailNotifications":
    get:
      operationId: listEmailNotifications
      summary: Lists form email notifications
      description: |
        Lists email notifications for the form

        Method is allowed only for system administrators and metaform administrators
      tags:
        - EmailNotifications
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A list of email notifications
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmailNotification"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createEmailNotification
      summary: create new form email notification
      description: |
        Creates new email notification

        Method is allowed only for system administrators and metaform administrators
      tags:
        - EmailNotifications
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/EmailNotification"
      responses:
        "200":
          description: Created email notification
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/EmailNotification"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/metaforms/{metaformId}/emailNotifications/{emailNotificationId}":
    get:
      operationId: findEmailNotification
      summary: Find a single email notification
      description: |
        Finds email notification

        Method is allowed only for system administrators and metaform administrators
      tags:
        - EmailNotifications
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: emailNotificationId
          required: true
          in: path
          description: EmailNotification id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: an email notification
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/EmailNotification"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateEmailNotification
      summary: Updates email notification
      description: |
        Updates email notification

        Method is allowed only for system administrators and metaform administrators
      tags:
        - EmailNotifications
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: emailNotificationId
          required: true
          in: path
          description: EmailNotification id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/EmailNotification"
      responses:
        "200":
          description: an email notification
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/EmailNotification"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteEmailNotification
      summary: Deletes an email notification
      description: |
        Deletes email notification

        Method is allowed only for system administrators and metaform administrators
      tags:
        - EmailNotifications
      parameters:
        - name: metaformId
          required: true
          in: path
          description: Metaform id
          schema:
            type: string
            format: uuid
        - name: emailNotificationId
          required: true
          in: path
          description: Email notification id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/users":
    get:
      operationId: listUsers
      summary: Lists Users
      description: |
        Lists Users. When searching users the search will also search from configured federated sources. When user is found from a federated source but does not exist on the user database, user without id is returned.

        Method is allowed for system administrators and administrators of any metaforms.
      tags:
        - Users
      parameters:
        - name: search
          in: query
          description: Search users with free-text query
          schema:
            type: string
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createUser
      summary: create new User
      description: |
        Creates new User

        Method is allowed for system administrators and administrators of any metaforms.
      tags:
        - Users
      requestBody:
        $ref: "#/components/requestBodies/User"
      responses:
        "200":
          description: Created User
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant user
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "409":
          description: Conflicted request was sent to server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Conflict"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/users/{userId}":
    get:
      operationId: findUser
      summary: Finds single user
      description: |
        Finds User by id.

        Method is allowed for system administrators and administrators of any metaforms.
      tags:
        - Users
      parameters:
        - name: userId
          required: true
          in: path
          description: User id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A found user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

    put:
      operationId: updateUser
      summary: Updates User
      description: |
        Updates User

        Method is allowed for system administrators and administrators of any metaforms.
      tags:
        - Users
      parameters:
        - name: userId
          required: true
          in: path
          description: User id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/User"
      responses:
        "200":
          description: Updated User
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant user
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "409":
          description: Conflicted request was sent to server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Conflict"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteUser
      summary: Deletes User
      description: |
        Deletes User

        Method is allowed for system administrators
      tags:
        - Users
      parameters:
        - name: userId
          required: true
          in: path
          description: User id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty content indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant user
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
                
  "/v1/exportThemes":
    get:
      operationId: listExportThemes
      summary: Lists form export themes
      description: |
        Lists export themes

        Method is allowed only for system administrators
      tags:
        - ExportThemes
      responses:
        "200":
          description: A list of export themes
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExportTheme"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createExportTheme
      summary: create new form export theme
      description: |
        Creates new export theme

        Method is allowed only for system administrators
      tags:
        - ExportThemes
      requestBody:
        $ref: "#/components/requestBodies/ExportTheme"
      responses:
        "200":
          description: Created export theme
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ExportTheme"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/exportThemes/{exportThemeId}":
    get:
      operationId: findExportTheme
      summary: Finds single export theme
      description: |
        Finds export theme

        Method is allowed only for system administrators
      tags:
        - ExportThemes
      parameters:
        - name: exportThemeId
          required: true
          in: path
          description: export theme id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: single export theme
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ExportTheme"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateExportTheme
      summary: Updates export theme
      description: |
        Updates export theme

        Method is allowed only for system administrators
      tags:
        - ExportThemes
      parameters:
        - name: exportThemeId
          required: true
          in: path
          description: ExportTheme id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/ExportTheme"
      responses:
        "200":
          description: an updated export theme
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ExportTheme"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteExportTheme
      summary: Deletes an export theme
      description: |
        Deletes export theme

        Method is allowed only for system administrators
      tags:
        - ExportThemes
      parameters:
        - name: exportThemeId
          required: true
          in: path
          description: export theme id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/exportThemes/{exportThemeId}/files":
    get:
      operationId: listExportThemeFiles
      summary: Lists files of export theme
      description: |
        Lists export theme files

        Method is allowed only for system administrators
      tags:
        - ExportThemeFiles
      parameters:
        - name: exportThemeId
          required: true
          in: path
          description: export theme id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A list of export theme files
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExportThemeFile"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createExportThemeFile
      summary: create new export theme file
      description: |
        Creates export theme file

        Method is allowed only for system administrators
      tags:
        - ExportThemeFiles
      parameters:
        - name: exportThemeId
          required: true
          in: path
          description: export theme id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/ExportThemeFile"
      responses:
        "200":
          description: Created export theme file
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ExportThemeFile"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/exportThemes/{exportThemeId}/files/{exportThemeFileId}":
    get:
      operationId: findExportThemeFile
      summary: Finds single export theme file
      description: |
        Finds export theme file

        Method is allowed only for system administrators
      tags:
        - ExportThemeFiles
      parameters:
        - name: exportThemeId
          required: true
          in: path
          description: export theme id
          schema:
            type: string
            format: uuid
        - name: exportThemeFileId
          required: true
          in: path
          description: export theme file id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: single export theme file
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ExportThemeFile"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateExportThemeFile
      summary: Updates export theme file
      description: |
        Updates export theme file

        Method is allowed only for system administrators
      tags:
        - ExportThemeFiles
      parameters:
        - name: exportThemeId
          required: true
          in: path
          description: ExportTheme id
          schema:
            type: string
            format: uuid
        - name: exportThemeFileId
          required: true
          in: path
          description: ExportThemeFile file id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/ExportThemeFile"
      responses:
        "200":
          description: an updated export theme file
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ExportThemeFile"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteExportThemeFile
      summary: Deletes an export theme file
      description: |
        Deletes export theme file

        Method is allowed only for system administrators
      tags:
        - ExportThemeFiles
      parameters:
        - name: exportThemeId
          required: true
          in: path
          description: export theme id
          schema:
            type: string
            format: uuid
        - name: exportThemeFileId
          required: true
          in: path
          description: export theme file id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/adminThemes":
    get:
      operationId: listAdminTheme
      summary: Lists admin themes
      description: |
        Lists admin themes

        Method is allowed only for system administrators
      tags:
        - AdminTheme
      responses:
        "200":
          description: A list of admin themes
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AdminTheme"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant theme
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createAdminTheme
      summary: Create new admin theme
      description: |
        Creates a new admin theme

        Method is allowed only for system administrators
      tags:
        - AdminTheme
      requestBody:
        $ref: "#/components/requestBodies/AdminTheme"
      responses:
        "200":
          description: Created admin theme
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/AdminTheme"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant theme
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/adminThemes/{themeId}":
    get:
      operationId: findAdminTheme
      summary: Finds admin theme
      description: |
        Finds a admin theme

        Method is allowed only for system administrators and metaform administrators / managers
      tags:
        - AdminTheme
      parameters:
        - name: themeId
          required: true
          in: path
          description: admin theme id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: single admin theme file
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/AdminTheme"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant metaform
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateAdminTheme
      summary: Updates admin theme
        Updates an admin theme

        Method is allowed only for system administrators
      tags:
        - AdminTheme
      parameters:
        - name: themeId
          required: true
          in: path
          description: admin theme id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/AdminTheme"
      responses:
        "200":
          description: an updated admin theme
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/AdminTheme"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant theme
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteAdminTheme
      summary: Deletes admin theme
        Deletes an admin theme

        Method is allowed only for system administrators
      tags:
        - AdminTheme
      parameters:
        - name: themeId
          required: true
          in: path
          description: admin theme id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating a successful removal
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "404":
          description: Attempted to make a call to an non existant theme
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/NotFound"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  "/v1/attachments/{attachmentId}":
    get:
      operationId: findAttachment
      summary: Find an attachment by id
      description: |
        Finds an attachment

        Method allows system administrators, metaform administrators and metaform managers to find a attachment.

        Otherwise user must have reply:view scope permission for the reply associated with the attachment. Permissions are handled by the Keycloak authorization system.
      parameters:
        - name: attachmentId
          in: path
          description: Attachment id
          required: true
          schema:
            type: string
            format: uuid
        - name: ownerKey
          in: query
          description: Reply owner key
          schema:
            type: string
      tags:
        - Attachments
      responses:
        "200":
          description: an attachment
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Attachment"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  "/v1/attachments/{attachmentId}/data":
    get:
      operationId: findAttachmentData
      summary: Find a attachment data by id
      description: |
        Finds an attachment data

        Method allows system administrators, metaform administrators and metaform managers to find a attachment data.

        Otherwise user must have reply:view scope permission for the reply associated with the attachment. Permissions are handled by the Keycloak authorization system.
      parameters:
        - name: attachmentId
          in: path
          description: Attachment id
          required: true
          schema:
            type: string
            format: uuid
        - name: ownerKey
          in: query
          description: Reply owner key
          schema:
            type: string
      tags:
        - Attachments
      responses:
        "200":
          description: Returns an attachment data
          content:
            application/json;charset=utf-8:
              schema:
                type: string
                format: binary
        "400":
          description: Invalid request was sent to the server
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  /v1/system/ping:
    get:
      summary: System ping endpoint
      description: |
        Method returns pong. The method can be used to determine whether the API is up or not.

        Method does not require any authentication.
      operationId: ping
      tags:
        - system
      responses:
        '200':
          description: System ping response
          content:
            text/plain:
              schema:
                type: string
                description: Returns pong

components:
  requestBodies:
    Reply:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/Reply"
      description: Payload
      required: true
    Draft:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/Draft"
      description: Payload
      required: true
    Metaform:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/Metaform"
      description: Payload
      required: true
    MetaformMember:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/MetaformMember"
      description: Payload
      required: true
    MetaformMemberGroup:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/MetaformMemberGroup"
      description: Payload
      required: true
    User:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/User"
      description: Payload
      required: true
    MetaformVersion:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/MetaformVersion"
      description: Payload
      required: true
    ExportThemeFile:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/ExportThemeFile"
      description: Payload
      required: true
    EmailNotification:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/EmailNotification"
      description: Payload
      required: true
    ExportTheme:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/ExportTheme"
      description: Payload
      required: true
    AdminTheme:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/AdminTheme"
      description: Payload
      required: true
    AuditLogEntry:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: "#/components/schemas/AuditLogEntry"
      description: Payload
      required: true
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Reply:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        revision:
          type: string
          format: date-time
        ownerKey:
          type: string
          readOnly: true
          description: |
            Reply owner key allows user to perform edit and delete operations on given reply.
            Key is returned only once on creation time and will not be recorable afterwards.
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
        data:
          $ref: "#/components/schemas/ReplyData"
    ReplyData:
      type: object
      additionalProperties:
        type: object

    MetaformVisibility:
      type: string
      enum:
        - PUBLIC
        - PRIVATE

    Metaform:
      type: object
      properties:
        id:
          type: string
          format: uuid
        visibility:
          $ref: "#/components/schemas/MetaformVisibility"
        exportThemeId:
          type: string
          format: uuid
        allowAnonymous:
          type: boolean
          description: Are anonymous replies allowed or not
        allowDrafts:
          type: boolean
          description: Are drafts allowed or not
        allowReplyOwnerKeys:
          type: boolean
          description: Generate reply owner keys to replies.
        allowInvitations:
          type: boolean
          description: Enable invitation functionality
        autosave:
          type: boolean
          description: Toggles the autosaving functionality on the form. When autosaving is enabled the form will save automatically every time form values change
        title:
          type: string
        slug:
          type: string
        sections:
          type: array
          items:
            $ref: "#/components/schemas/MetaformSection"
        filters:
          type: array
          items:
            $ref: "#/components/schemas/MetaformFilter"
        scripts:
          type: object
          properties:
            afterCreateReply:
              type: array
              description: List of scripts run after new reply is created
              items:
                $ref: "#/components/schemas/MetaformScript"
            afterUpdateReply:
              type: array
              description: List of scripts run after a reply is updated
              items:
                $ref: "#/components/schemas/MetaformScript"
            metaformExportXlsx:
              type: array
              description: List of scripts run when generating a metaform Excel export
              items:
                $ref: "#/components/schemas/MetaformScript"
        defaultPermissionGroups:
          description: |
            Defines default permission groups for this form. This one is used if none of the fields override the 
            permission groups. 
            
            It is possible to use default and option override at the same time. In that case the
            default value is used when overriding field has no value (e.g. has been filtered out by visibleIf rule).
          $ref: "#/components/schemas/PermissionGroups"
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Modified data
          readOnly: true
        creatorId:
          type: string
          format: uuid
          description: ID of creator
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          description: ID of last modifier
          readOnly: true

    User:
      type: object
      description: Form member or manager user.
      required:
        - email
        - firstName
        - lastName
        - userName
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Id of the form member or manager user in Keycloak.
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        userName:
          type: string
        displayName:
          type: string
          readOnly: true
          description: Human readable name for user. Display name is customized for each fededated identity. For example card authentication sources usually display card serial numbers as part of the name. 
        federatedIdentities:
          type: array
          items:
            $ref: "#/components/schemas/UserFederatedIdentity"
        
    UserFederatedIdentity:
      type: object
      description: User federated identity
      required:
        - source
        - userId
        - userName
        - identityProvider
      properties:
        source:
          $ref: "#/components/schemas/UserFederationSource"
        userId:
          type: string
        userName:
          type: string
          
    UserFederationSource:
      type: string
      enum:
        - CARD

    MetaformMember:
      type: object
      description: Form member or manager user.
      required:
        - email
        - firstName
        - lastName
        - role
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Id of the form member or manager user in Keycloak.
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        role:
          $ref: "#/components/schemas/MetaformMemberRole"

    MetaformMemberRole:
      type: string
      enum:
        - MANAGER
        - ADMINISTRATOR

    MetaformMemberGroup:
      type: object
      description: Form manager user group.
      required:
        - memberIds
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Id of the manager group in the Keycloak
        displayName:
          type: string
          description: Display of the manager group
        memberIds:
          type: array
          items:
            type: string
            format: uuid

    AdminTheme:
      type: object
      required:
        - data
        - name
      properties:
        id:
          type: string
          format: uuid
        data:
          type: object
          additionalProperties:
            type: object
        name:
          type: string
        slug:
          type: string
        creatorId:
          type: string
          format: uuid
          description: ID of creator
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          description: Id of last modifier
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    MetaformVersionType:
      type: string
      enum:
        - ARCHIVED
        - DRAFT

    MetaformVersion:
      type: object
      required:
        - type
        - data
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          $ref: "#/components/schemas/MetaformVersionType"
        data:
          type: object
          additionalProperties:
            type: object
        creatorId:
          type: string
          format: uuid
          description: ID of creator
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          description: Id of last modifier
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    MetaformFilter:
      type: object
      required:
        - id
        - name
        - filter
      properties:
        id:
          type: string
        name:
          type: string
        fields:
          type: array
          description: Predefined list replies filter. Format is field:value
          items:
            type: string

    MetaformScript:
      type: object
      required:
        - name
        - language
        - content
      properties:
        name:
          type: string
        language:
          type: string
        content:
          type: string
    MetaformSection:
      type: object
      properties:
        title:
          type: string
        visibleIf:
          $ref: "#/components/schemas/FieldRule"
        fields:
          type: array
          items:
            $ref: "#/components/schemas/MetaformField"
    MetaformField:
      type: object
      required:
        - type
      properties:
        visibleIf:
          $ref: "#/components/schemas/FieldRule"
        name:
          type: string
          description: Field name
        type:
          $ref: "#/components/schemas/MetaformFieldType"
        title:
          type: string
        required:
          type: boolean
        contexts:
          type: array
          items:
            type: string
        flags:
          $ref: "#/components/schemas/MetaformFieldFlags"
        placeholder:
          type: string
        class:
          type: string
        readonly:
          type: boolean
        help:
          type: string
        default:
          description: a default value for a field
          type: string
        min:
          type: integer
          format: int32
          description: Minimum value for a field. Only for number fields
        max:
          type: integer
          format: int32
          description: Maximum value for a field. Only for number fields
        step:
          type: integer
          format: int32
          description: Value step for a field. Only for number fields
        checked:
          type: boolean
          description: Whether checkbox should be checked by default. Only for checkbox
            fields
        printable:
          type: boolean
          description: Defines whether field is printable or not. Only for table fields
        options:
          type: array
          description: Options for radio, checklist, select fields
          items:
            $ref: "#/components/schemas/MetaformFieldOption"
        autocomplete:
          $ref: "#/components/schemas/MetaformFieldAutocomplete"
        source-url:
          type: string
          description: Source url for autocomplete and autocomplete-multiple fields. This field is deprecated, use autocomplete instead.
          format: url
          deprecated: true
        upload-url:
          type: string
          description: Upload url for files field.
          format: url
        single-file:
          type: boolean
          description: Defines whether file fields allow multiple files or just one
        only-images:
          type: boolean
          description: Defines whether file fields allow only images
        max-file-size:
          type: integer
          format: int64
          description: Maximum upload size for image filds
        add-rows:
          type: boolean
          description: Defines whether user can add more table rows.
        draggable:
          type: boolean
          description: Defines whether table rows should be draggable.
        columns:
          type: array
          description: Columns for table fields
          items:
            $ref: "#/components/schemas/MetaformTableColumn"
        src:
          type: string
          description: Url for logo field.
          format: url
        text:
          type: string
          description: Text for small field.
        html:
          type: string
          description: Html code for html field.
        source:
          $ref: "#/components/schemas/MetaformFieldSource"
        workdaysOnly:
          type: boolean
          description: Show workdays only for date/date-time field.

    MetaformFieldAutocomplete:
      type: object
      required:
        - service
      properties:
        service:
          $ref: "#/components/schemas/MetaformFieldAutocompleteService"
        options:
          type: object
          properties:
            codeServerBaseUrl:
              type: string
              description: Base URL for code server based services
              format: url
            codeServerClassificationId:
              type: string
              description: Classification id for Code Server services
            codeServerParentConceptCodeId:
              type: string
              description: Parent concept code id for Code Server services

    MetaformFieldAutocompleteService:
      type: string
      description: Service that provides the autocomplete values
      enum:
        - code-server-concept-code

    MetaformFieldFlags:
      type: object
      properties:
        managementEditable:
          type: boolean
          description: Field should be editable in management service
          default: false

    MetaformFieldType:
      type: string
      enum:
        - text
        - url
        - hidden
        - email
        - number
        - slider
        - memo
        - boolean
        - radio
        - checklist
        - date
        - time
        - date-time
        - files
        - table
        - logo
        - small-text
        - html
        - submit
        - select
        - autocomplete
        - autocomplete-multiple
    MetaformTableColumn:
      type: object
      required:
        - type
        - name
      properties:
        type:
          $ref: "#/components/schemas/MetaformTableColumnType"
        name:
          type: string
          description: Column name
        title:
          type: string
          description: Column title
        calculate-sum:
          type: boolean
          description: Defines column should automatically calculate sum
        sum-postfix:
          type: string
          description: Postfix for calculated sum
        column-width:
          type: integer
          description: Defines column width
          format: int32
        placeholder:
          type: string
          description: Placeholder for column field
        readonly:
          type: boolean
          description: Defines column as readonly
        required:
          type: boolean
          description: Defines column as requires
        source-url:
          type: string
          format: url
          description: Defines source url for autocomplete columns
        html:
          type: string
          description: Html code for html columns
        action:
          type: string
          description: Action for button columns
        values:
          type: object
          description: Values for enum columns
          properties:
            value:
              type: string
            other:
              type: string
            text:
              type: string
    MetaformTableColumnType:
      type: string
      enum:
        - hidden
        - text
        - url
        - email
        - autocomplete
        - number
        - date
        - time
        - html
        - button
        - enum
    MetaformFieldOption:
      type: object
      description: Option object for Metaform field
      required:
        - name
        - text
      properties:
        name:
          description: Option name
          type: string
        text:
          description: Option text
          type: string
        checked:
          description: Defines whether option should be checked by default.
          type: boolean
        selected:
          description: Defines whether option should be selected by default.
          type: boolean
        permissionGroups:
          description: |
            Defines permission groups for this option. This option overrides the default options defined by the 
            defaultPermissionGroups of the form. There permission groups are actived only when the posted form has this
            option selected in the reply data.
          $ref: "#/components/schemas/PermissionGroups"

    PermissionGroups:
      type: object
      description: |
        Defines member groups for permissions. Object can be used either as default permission groups for single form or 
        in a field option level. 
        
        More detailed descriptions of behaviours in Metaform and MetaformFieldOption objects.
      properties:
        viewGroupIds:
          description: |
            Member group ids of groups that will receive reply:view permission to the posted reply.
          type: array
          items:
            type: string
            format: uuid
        editGroupIds:
          description: |
            Member group ids of groups that will receive reply:edit permission to the posted reply.
          type: array
          items:
            type: string
            format: uuid
        notifyGroupIds:
          description: |
            Member group ids of groups that will receive reply:notify permission to the posted reply.
          type: array
          items:
            type: string
            format: uuid

    MetaformFieldSource:
      type: object
      description: Field value source. Defaults to using user's reply.
      required:
        - type
      properties:
        type:
          $ref: "#/components/schemas/MetaformFieldSourceType"
        options:
          type: object
          properties:
            autocompleteField:
              description: Source autocomplete field name. This option is used only when using source type autocomplete
              type: string
            autocompleteItemProperty:
              description: Name of the autocomplete item property to be used as field value. This option is used only when using source type autocomplete
              type: string
            accessTokenAttribute:
              description: Name of the user token attribute. This option is used only when using source type accessToken
              type: string

    MetaformFieldSourceType:
      type: string
      enum:
        - default
        - accessToken
        - autocomplete

    FieldRule:
      type: object
      description: Rule for determining field value. Used in visible if and email notify if rules
      properties:
        field:
          type: string
          description: Field where the visible if rule is relative to
        equals:
          type: string
          description: Value must be equal to this value. If value is specified "true"
            field must have any value selected
        not-equals:
          type: string
          description: Value must be not equal to this value.
        and:
          type: array
          items:
            $ref: "#/components/schemas/FieldRule"
        or:
          type: array
          items:
            $ref: "#/components/schemas/FieldRule"
    EmailNotification:
      type: object
      description: Email notification
      required:
        - emails
        - subjectTemplate
        - contentTemplate
      properties:
        id:
          type: string
          format: uuid
        subjectTemplate:
          type: string
        contentTemplate:
          type: string
        emails:
          type: array
          items:
            type: string
        notifyIf:
          $ref: "#/components/schemas/FieldRule"
    Attachment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Entity identifier
        name:
          description: Attachment's name
          type: string
        contentType:
          description: Attachment's content type (e.g. application/pdf)
          type: string
    ExportTheme:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        parentId:
          type: string
          format: uuid
        locales:
          type: string
    ExportThemeFile:
      type: object
      required:
        - path
        - themeId
        - content
      properties:
        id:
          type: string
          format: uuid
        path:
          type: string
        themeId:
          type: string
          format: uuid
        content:
          type: string
    ReplyExportFormat:
      type: string
      enum:
        - XLSX
        - PDF

    Draft:
      type: object
      required:
        - data
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        data:
          $ref: "#/components/schemas/DraftData"
        createdAt:
          type: string
          format: date-time
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          readOnly: true

    DraftData:
      type: object
      additionalProperties:
        type: object

    AuditLogEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Entity identifier
        userId:
          type: string
          format: uuid
          readOnly: true
          description: Id of creator user
        replyId:
          type: string
          format: uuid
          readOnly: true
          description: Id of the reply
        attachmentId:
          type: string
          format: uuid
          readOnly: true
          description: Id of the attachment
        createdAt:
          type: string
          format: date-time
          readOnly: true
          description: Time of accessing the reply
        message:
          type: string
          readOnly: true
          description: Description of the event
        logEntryType:
          $ref: "#/components/schemas/AuditLogEntryType"

    AuditLogEntryType:
      type: string
      enum:
        - VIEW_REPLY
        - LIST_REPLY
        - MODIFY_REPLY
        - DELETE_REPLY
        - CREATE_REPLY
        - VIEW_REPLY_ATTACHMENT
        - DOWNLOAD_REPLY_ATTACHMENT
        - EXPORT_REPLY_PDF
        - EXPORT_REPLY_XLSX

    ReplyOrderCriteria:
      type: string
      enum:
        - CREATED
        - MODIFIED

    InternalServerError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Forbidden:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    BadRequest:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    NotImplemented:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    NotFound:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Conflict:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
